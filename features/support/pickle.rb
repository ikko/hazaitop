# this file generated by script/generate pickle [paths] [email]
#
# Make sure that you are loading your factory of choice in your cucumber environment
#
# For machinist add: features/support/machinist.rb
#
#    require 'machinist/active_record' # or your chosen adaptor
#    require File.dirname(__FILE__) + '/../../spec/blueprints' # or wherever your blueprints are
#    Before { Sham.reset } # to reset Sham's seed between scenarios so each run has same random sequences
#
# For FactoryGirl add: features/support/factory_girl.rb
#
#    require 'factory_girl'
#    require File.dirname(__FILE__) + '/../../spec/factories' # or wherever your factories are
#
# You may also need to add gem dependencies on your factory of choice in <tt>config/environments/cucumber.rb</tt>

require 'pickle/world'
# Example of configuring pickle:
#
Pickle.configure do |config|
  #config.adapters = [:factory_girl]
  config.map 'én', 'engem', 'nálam', 'nekem', 'tőlem', 'magam', 'saját', 'saját magam', :to => 'user: "me"'
end
require 'pickle/path/world'
require 'pickle/email/world'

# egy kis magyarosítás
module Pickle
  class Parser
    module Matchers
      def match_ordinal
        '(?:\d+(?:\.))'
      end

      def match_index
        "(?:első|utolsó|#{match_ordinal})"
      end

      def match_prefix
        '(?:(?:egy|a|az) )'
      end

      def capture_number_in_ordinal
        '(?:(\d+)(?:\.))'
      end
    end

    def parse_index(index)
      case index
      when nil, '', 'utolsó' then -1
      when /#{capture_number_in_ordinal}/ then $1.to_i - 1
      when 'első' then 0
      end
    end
  end
end
